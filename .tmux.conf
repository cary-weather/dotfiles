# Start windows and panes at 1, not 0.
set -g base-index 1
set -g pane-base-index 1
# Allow mouse scrolling.
# setw -g mode-mouse on
# Add vim key bindings.
setw -g mode-keys vi
# Bind prefix to Ctrl+A.
unbind C-b
set -g prefix C-a
bind-key a send-prefix
# Prevent capturing too many keystrokes when
# moving between panes.
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R
bind-key -r M-k resize-pane -U
bind-key -r M-j resize-pane -D
bind-key -r M-h resize-pane -L
bind-key -r M-l resize-pane -R
# Set Meta-Num to select window.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
# Allow Ctrl+Left/Right to move between words.
set-window-option -g xterm-keys on

# Use Ctrl+k to clear the screen and the scroll history.
# DISABLED: THIS GETS IN THE WAY OF C-k for vim move to lower split
# bind -n C-k send-keys C-l \; clear-history

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# These are bound to prefix <char> so we can continue to use stuff like C-l for clear
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind-key h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key \ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
